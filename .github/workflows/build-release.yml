name: Build and Release YouTube Downloader

on:
  push:
    tags:
      - 'v*'  # 当推送v开头的tag时触发，如v2.1, v2.2等
  workflow_dispatch:  # 允许手动触发

permissions:
  contents: write  # 允许创建release和上传文件

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: YouTube Downloader ${{ github.ref_name }}
        body: |
          ## 🎉 YouTube Downloader ${{ github.ref_name }}

          ### 📦 下载选择
          - **Windows独立exe**: `YouTube_Downloader_${{ github.ref_name }}.exe`
          - **macOS独立应用**: `YouTube_Downloader_${{ github.ref_name }}_macos.app`
          - **配置模板**: `youtube_downloader_config.yaml`

          ### ✨ 主要功能
          - 🎯 **直接输入链接**：无需创建txt文件
          - 📱 **低画质选项**：节省流量和时间
          - ⚡ **秒开启动**：代理测试默认关闭
          - 🔧 **智能重试**：自动处理下载失败
          - 🎨 **友好界面**：拖拽文件、实时进度显示
          - 🌍 **跨平台支持**：Windows和macOS原生应用

          ### 🚀 使用方法

          **Windows用户:**
          1. 下载 `YouTube_Downloader_${{ github.ref_name }}.exe`
          2. 双击运行

          **macOS用户:**
          1. 下载 `YouTube_Downloader_${{ github.ref_name }}_macos.app`
          2. 在终端中运行: `chmod +x YouTube_Downloader_${{ github.ref_name }}_macos.app`
          3. 双击运行或终端执行: `./YouTube_Downloader_${{ github.ref_name }}_macos.app`

          ### 📝 更新内容
          详见commit历史和README文档。

        draft: false
        prerelease: false

  build:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            executable_name: YouTube_Downloader_${{ github.ref_name }}.exe
            asset_name: YouTube_Downloader_${{ github.ref_name }}.exe
            build_args: --onefile --windowed
          - os: macos-latest
            platform: macos
            executable_name: YouTube_Downloader_${{ github.ref_name }}_macos.app
            asset_name: YouTube_Downloader_${{ github.ref_name }}_macos.app
            build_args: --onefile --windowed

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies (Windows)
      if: matrix.platform == 'windows'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install pyyaml tkinterdnd2 requests

    - name: Install dependencies (macOS)
      if: matrix.platform == 'macos'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install pyyaml tkinterdnd2 requests

    - name: Download yt-dlp for macOS
      if: matrix.platform == 'macos'
      run: |
        curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos -o yt-dlp
        chmod +x yt-dlp

    - name: Build executable (Windows)
      if: matrix.platform == 'windows'
      run: |
        pyinstaller ${{ matrix.build_args }} --name="${{ matrix.executable_name }}" --add-data="yt-dlp.exe;." --add-data="youtube_downloader_config.yaml;." --hidden-import="yaml" --hidden-import="tkinterdnd2" --hidden-import="requests" --exclude-module="matplotlib" --exclude-module="numpy" --exclude-module="scipy" --exclude-module="pandas" youtube_downloader.py

    - name: Build executable (macOS)
      if: matrix.platform == 'macos'
      run: |
        pyinstaller ${{ matrix.build_args }} --name="YouTube_Downloader_${{ github.ref_name }}_macos" --add-data="yt-dlp:." --add-data="youtube_downloader_config.yaml:." --hidden-import="yaml" --hidden-import="tkinterdnd2" --hidden-import="requests" --exclude-module="matplotlib" --exclude-module="numpy" --exclude-module="scipy" --exclude-module="pandas" youtube_downloader.py
        # 重命名文件添加.app扩展名
        mv "dist/YouTube_Downloader_${{ github.ref_name }}_macos" "dist/YouTube_Downloader_${{ github.ref_name }}_macos.app"
        
    - name: Get file info (Windows)
      if: matrix.platform == 'windows'
      id: file_info_windows
      run: |
        $file_path = "dist/${{ matrix.executable_name }}"
        $file_size = (Get-Item $file_path).Length
        $file_size_mb = [math]::Round($file_size / 1MB, 1)
        echo "file_size_mb=$file_size_mb" >> $env:GITHUB_OUTPUT
        echo "file_path=$file_path" >> $env:GITHUB_OUTPUT

    - name: Get file info (macOS)
      if: matrix.platform == 'macos'
      id: file_info_macos
      run: |
        # 调试：列出dist目录内容
        echo "Contents of dist directory:"
        ls -la dist/

        file_path="dist/${{ matrix.executable_name }}"
        echo "Looking for file: $file_path"

        if [ -f "$file_path" ]; then
          file_size=$(stat -f%z "$file_path")
          file_size_mb=$(echo "scale=1; $file_size / 1048576" | bc)
          echo "file_size_mb=$file_size_mb" >> $GITHUB_OUTPUT
          echo "file_path=$file_path" >> $GITHUB_OUTPUT
          echo "File found and info recorded"
        else
          echo "File not found: $file_path"
          exit 1
        fi

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: dist/${{ matrix.executable_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream
        
  upload-config:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Upload config template
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: youtube_downloader_config.yaml
        asset_name: youtube_downloader_config.yaml
        asset_content_type: text/yaml
